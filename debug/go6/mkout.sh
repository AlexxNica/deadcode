#!/bin/bash

if [[ -z "$GOROOT" ]]; then
    GOROOT=$(go env GOROOT)
fi

function gen() {
cat <<EOF
// +build ignore

package go6

// #include <u.h>
// #include <6.out.h>
import "C"
EOF

echo "const ("
cat $GOROOT/src/cmd/6l/6.out.h |
sed -n -r '
    /^\s+A[A-Z]+/ { s/\s+(A\w+),?/\t\1 = C.\1/; p }
    /^\s+D_\w+/ { s/\s+(D_\w+).*/\t\1 = C.\1/; p }
    /^\s+T_\w+/ { s/\s+(T_\w+).*/\t\1 = C.\1/; p }
'
echo ")"
}

gen > obj.in.go
go tool cgo -godefs -- \
    -I$GOROOT/include \
    -I$GOROOT/src/cmd/6l obj.in.go | gofmt > obj.go

function opnames() {
cat <<EOF
// THIS FILE IS AUTOMATICALLY GENERATED. DO NOT EDIT.

package go6

var opnames = [ALAST+1]string{
EOF

cat $GOROOT/src/cmd/6l/6.out.h |
sed -n -r '/^\s+A\w+/ { s/\s+A(\w+),?.*/\tA\1: "\1",/; p }'
 
echo "}"

echo "var regnames = [256]string {"
cat $GOROOT/src/cmd/6l/6.out.h |
sed -n -r '/^\s+D_\w+/ { s/\s+D_(\w+),?.*/\tD_\1: "\1",/; p }'
echo "}"
}

opnames | gofmt > opnames.go

